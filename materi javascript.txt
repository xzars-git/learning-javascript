Apa itu Website ? 

Dibuat dengan program dan dipanggil dengan Domain.

Apa itu HTTP Protocol

HTTP : Hypertext Transfer Protocol
1. The HTTP is an application layer protocol that allows web-based application to communicate and exchange data
2. HTTP is the messenger of the web
3. It's used to deliver contents, for example images, videos, audios, docs, etc

Three important things about the HTTP
1. HTTP is connectionless: after making the request, the client disconnect from the server, then when the response is ready the server re-establish the connection again and deliver the response

ðŸ“Œ 1. HTML (HyperText Markup Language)
HTML adalah dasar dari semua halaman web. Mirip dengan bagaimana Flutter menggunakan widget, HTML membentuk struktur dasar sebuah website.

ðŸ‘‰ Hal yang Wajib Dipahami:
âœ… Struktur dasar HTML (<!DOCTYPE html>, <html>, <head>, <body>)
âœ… Tag penting: <div>, <p>, <h1> - <h6>, <a>, <img>, <form>, <input>, <button>, <table>
âœ… Semantic HTML (<header>, <nav>, <section>, <article>, <footer>)
âœ… Forms dan Input Fields (<input>, <select>, <textarea>, <button>)

ðŸ“Œ Contoh Struktur HTML Dasar
html
Copy
Edit

ðŸ“Œ 2. CSS (Cascading Style Sheets)
CSS digunakan untuk mempercantik tampilan web. Di Flutter, kamu pakai BoxDecoration, di web pakai CSS.

ðŸ‘‰ Hal yang Wajib Dipahami:
âœ… Selector & Properti Dasar: color, background, font-size, margin, padding
âœ… CSS Box Model: margin, border, padding, content
âœ… Flexbox (untuk layout responsif)
âœ… Grid Layout (alternatif Flexbox)
âœ… Responsive Design (media queries)

ðŸ“Œ Contoh CSS Dasar
css
Copy
Edit
body {
  background-color: #f4f4f4;
  font-family: Arial, sans-serif;
}

h1 {
  color: blue;
}

button {
  background-color: green;
  color: white;
  padding: 10px 20px;
  border: none;
}
ðŸ“Œ Contoh Media Query (Responsive)
css
Copy
Edit
@media (max-width: 600px) {
  body {
    background-color: lightgray;
  }
}

ðŸ“Œ 3. JavaScript (JS)
JavaScript membuat website interaktif. Kalau di Flutter pakai Dart untuk logika aplikasi, di web pakai JavaScript.

ðŸ‘‰ Hal yang Wajib Dipahami:
âœ… Variabel & Tipe Data (let, const, var)
âœ… Fungsi & Event Listener (onClick, onChange)
âœ… DOM Manipulation (menambahkan elemen ke halaman secara dinamis)
âœ… Fetch API (mengambil data dari backend)
âœ… ES6+ (Arrow Function, Destructuring, Spread Operator, Async/Await, Module)

ðŸ“Œ Contoh JavaScript Dasar
js
Copy
Edit
const button = document.querySelector("button");

button.addEventListener("click", function() {
  alert("Tombol diklik!");
});
ðŸ“Œ Contoh Fetch API (Ambil Data dari Server)
js
Copy
Edit
fetch("https://jsonplaceholder.typicode.com/users")
  .then(response => response.json())
  .then(data => console.log(data))
  .catch(error => console.error("Error:", error));

ðŸ“Œ 5. Responsive Web Design
Pastikan website bisa tampil baik di mobile & desktop.

Gunakan media queries di CSS
Gunakan Flexbox atau CSS Grid
Gunakan rem/em daripada px (untuk ukuran yang lebih fleksibel)

Framework Front-End (React.js)
Di interview sebagai Front-End Developer, React.js kemungkinan besar akan ditanyakan.

ðŸ‘‰ Dasar yang Harus Dipahami di React:
âœ… JSX (cara menulis UI di React)
âœ… Components & Props (mirip Widget di Flutter)
âœ… State & Hooks (useState, useEffect)
âœ… Event Handling (onClick, onChange)
âœ… Routing dengan react-router-dom
âœ… Fetch API dengan useEffect
âœ… CSS di React (Tailwind, Styled Components, CSS Modules)

ðŸ“Œ 6. API & JSON
Sebagai Front-End, kamu akan sering berkomunikasi dengan Backend untuk menampilkan data ke UI.

API bisa berbentuk REST API atau GraphQL
Data biasanya dalam format JSON
ðŸ“Œ Contoh JSON Data
json
Copy
Edit
{
  "name": "John Doe",
  "email": "john@example.com"
}
ðŸ“Œ Cara Mengambil API di React
jsx
Copy
Edit
import { useEffect, useState } from "react";

const App = () => {
  const [users, setUsers] = useState([]);

  useEffect(() => {
    fetch("https://jsonplaceholder.typicode.com/users")
      .then(response => response.json())
      .then(data => setUsers(data));
  }, []);

  return (
    <div>
      <h1>Users</h1>
      {users.map(user => (
        <p key={user.id}>{user.name}</p>
      ))}
    </div>
  );
};